name: Create package release
on:
  push:
    branches: [ main ]
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      output: ${{ steps.set_env.outputs.test }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@main
        with:
          fetch-depth: 2
          ref: 'main'
      - name: featch tags
        run: git fetch --tags
      - name: collect integrations names
        run: |
          cd common/ 
          echo "PACKAGE=$(ls | jq  --raw-input . | jq --slurp . | jq tostring)" >> $GITHUB_ENV
      - name: set tag
        run: echo "TAGS=$(git tag --points-at | jq  --raw-input .  | jq --slurp . | jq tostring)" >> $GITHUB_ENV
      - id: output-tags
        uses: actions/github-script@master
        with:
          script: |
            const { PACKAGE, TAGS } = process.env;
            console.log(PACKAGE);
            console.log(TAGS);
            const package = JSON.parse(JSON.parse(PACKAGE));
            const tags = JSON.parse(JSON.parse(TAGS));
            const selectedTags = tags.filter(it => package.includes(it.trim().split('/')[1]?.split('@')[0]))
            return JSON.stringify(JSON.stringify(selectedTags))
          result-encoding: string
      - name: print var
        run: echo ${{steps.output-tags.outputs.result}}
      - name: set
        id: set_env
        run: echo "::set-output name=test::${{steps.output-tags.outputs.result}}"
  release:
    if: needs.prepare.outputs.output != '[]'
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        tag: ${{fromJSON(needs.prepare.outputs.output)}}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@main
        with:
          fetch-depth: 2
          ref: 'main'
          submodules: true
      - name: set integration name
        run: echo "PACKAGE_NAME=$(echo ${{ matrix.tag }} | awk -F'[/@]' '{print $3}' | sed 's/ *$//g')" >> $GITHUB_ENV
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@KYVENetwork'
      - name: setup lerna
        run: yarn setup
      - name: print integration name
        run: echo ${{ env.PACKAGE_NAME }}
      - name: build
        run: yarn build
      - name: Publish release
        run: yarn publish
        working-directory: common/${{env.PACKAGE_NAME}}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
