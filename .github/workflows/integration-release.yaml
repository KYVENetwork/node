name: Create Release Binaries
on:
  push:
    branches: [ main ]
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      output: ${{ steps.set_env.outputs.test }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@main
        with:
          fetch-depth: 2
          ref: 'main'
      - name: featch tags
        run: git fetch --tags
      - name: set tag
        run: echo "TAGS=$(git tag --points-at | jq  --raw-input .  | jq --slurp . | jq tostring)" >> $GITHUB_ENV
      - name: print var
        run: echo ${{env.TAGS}}
      - name: set
        id: set_env
        run: echo "::set-output name=test::${{env.TAGS}}"
  build:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        tag: ${{fromJSON(needs.prepare.outputs.output)}}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@main
        with:
          fetch-depth: 2
          ref: 'main'
      - name: set integration name
        run: echo "INTEGRATION_NAME=$(${{ matrix.tag }} | awk -F'[/@]' '{print $3}' | sed 's/ *$//g')" >> $GITHUB_ENV
      - name: install yarn
        run: npm install --global yarn
      - name: setup lerna
        run: yarn setup
      - name: Build Binaries
        run: |
          cd integrations/${{ env.INTEGRATION_NAME }}
          yarn build:binaries
          cd out
          zip kyve-linux.zip kyve-linux
          rm kyve-linux
          zip kyve-macos.zip kyve-macos
          rm kyve-macos
          cd ..
          - name: Generate Changelog
            id: github_release
            uses: mikepenz/release-changelog-builder-action@v3
            with:
              configuration: ".github/workflows/configuration.json"
              commitMode: true
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          - name: Publish the Release
            uses: softprops/action-gh-release@v1
            with:
              body: ${{steps.github_release.outputs.changelog}}
              tag_name: ${{ steps.vars.outputs.tag_name }}
              files: integrations/${{env.INTEGRATION_NAME}}/out/*
              prerelease: false
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}